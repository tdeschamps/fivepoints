div.container.padded-down.full-page
	div.col-xs-12.col-sm-8.col-sm-offset-2
		h1 
			| Create your black book
		= simple_form_for @black_book,
		url: url_for(action: 'create', controller: 'black_books'),
		method: 'post' do |f|
			.col-xs-12.col-md-6
				.input.input--black_book
					= f.input_field :name, {class: "input__field input__field--black_book", id: "black_book-name"}
					label.input__label.input__label--black_book.input__label--black_book-color-1 for="black_book-name" 
					  span.input__label-content.input__label-content--black_book Title
				
				= f.simple_fields_for :uploaded_files do |file|
				    = render 'add_picture_form', :f => file
				
				.input.input--black_book
					
					input#user_input_autocomplete_address.black_book-input.input__field.input__field--black_book autocomplete="off" name="user_input_autocomplete_address" placeholder = ""
					
					label.input__label.input__label--black_book.input__label--black_book-color-2 for="user_input_autocomplete_address" 
					  span.input__label-content.input__label-content--black_book Enter a location  
						    
				= f.input :city, as: :hidden, input_html: {id: "locality"}
				= f.input :formatted_address, as: :hidden, input_html: {id: "formatted_address"}
				= f.input :country, as: :hidden, input_html: {id: "country"}
				= f.input :state, as: :hidden, input_html: {id: "administrative_area_level_1"}
			.col-xs-12.col-md-6	
				.input.input--black_book-story
				
					= f.input_field :story,{ required: false, as: :text, class: "input__field input__field--black_book-story", id: "black_book-story", placeholder: "Tell us your beautiful story"}
				
					label.input__label.input__label--black_book-story for="black_book-story" 
					  span.input__label-content.input__label-content--black_book-story Story
			
			= f.button :submit, "Create", {class: "submit-button progress-button", "data-style" => "fill", "data-horizontal" => ""}

= content_for :js do

	script src = "https://maps.googleapis.com/maps/api/js?libraries=places&amp;key=AIzaSyAhp6C4bGRbxb-fI9r69B-uocco11a9qjE"
	= javascript_include_tag "black_books/autocomplete.js"
	= javascript_include_tag "black_books/newUpload.js"
	= javascript_include_tag "classie.js"
	javascript:
		(function() {
			// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
			if (!String.prototype.trim) {
				(function() {
					// Make sure we trim BOM and NBSP
					var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
					String.prototype.trim = function() {
						return this.replace(rtrim, '');
					};
				})();
			}

			[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
				// in case the input is already filled..
				if( inputEl.value.trim() !== '' ) {
					classie.add( inputEl.parentNode, 'input--filled' );
				}

				// events:
				inputEl.addEventListener( 'focus', onInputFocus );
				inputEl.addEventListener( 'blur', onInputBlur );
			} );

			function onInputFocus( ev ) {
				classie.add( ev.target.parentNode, 'input--filled' );
			}

			function onInputBlur( ev ) {
				if( ev.target.value.trim() === '' ) {
					classie.remove( ev.target.parentNode, 'input--filled' );
				}
			}

		})();