.page-wrapper
	.header-wrapper
		.black_book-header style=("background: url('#{@black_book.uploaded_files.last.file.url(:xlarge)}') no-repeat fixed; background-size:cover;")
		.darken			
			h1
				= @black_book.name
	.container
		.col-xs-12
			= render "black_book_story", black_book: @black_book if @black_book.story
		.col-xs-12
			.row-space-top-8.row-space-8.text-center	
				h2 Your places
			.places-list-wrapper#active-places-list
				ul.place-list.list-unstyled.ui-sortable#sortable
				
					- @black_book_places.each do |black_book_place|
						
						= render partial: 'show_place_edit', locals: {place: black_book_place.place, black_book_place: black_book_place, picture_url: "#{black_book_place.place.foursquare_picture_url}", archive: false} 
							
					- if @black_book_places.count < 5
						= render 'add_place' 
					- else
						.hidden
							= render 'add_place'
						= render 'black_book_full'	
					
	.map-wrapper
		#map
	.container
		.col-xs-12
			.row-space-top-8.row-space-8.text-center	
				h2 Archived places
		.places-list-wrapper#archived-places-list
			ul.place-list.list-unstyled
				- @archived_black_book_places.each do |black_book_place|
				
					= render partial: 'show_place_edit', locals: {place: black_book_place.place, black_book_place: black_book_place, picture_url: black_book_place.place.foursquare_picture_url, archive: true} 

= render "add_place_modal"
.md-overlay

= content_tag(:div, id: "city-boundaries-coordinates", data: {url: @city_coordinates}) do

= content_tag(:div, id: "geolocations", data: {url: @geolocations}) do

= content_for :js do
	= javascript_include_tag "classie.js"
	= javascript_include_tag "black_books/sortable_list.js"
	= javascript_include_tag "black_books/foursquare.js"
	= javascript_include_tag "black_books/black_book_places.js"
	= javascript_include_tag "black_books/newUpload.js"
	script src = "https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.js"
	= javascript_include_tag "black_books/map"
	
	javascript:

		$(document).on('click', '#user_input_foursquare', function () {
			initFoursquare({
				city : #{{(@black_book.city.gsub(" ","%20")+ "," + @black_book.state).to_json}},
				black_book_id : #{{@black_book.id}}
				})
      		var city = #{{(@black_book.city.gsub(" ","%20")+ "," + @black_book.state).to_json}};
      		var $this = $(this);
      		var $that = $this.parentsUntil($('form #new_place'));
      		console.log($that);
      		$this.autocomplete({
      			source: function(request, response) {
      					fs_suggest(response, {
      						near: city, 
      						query: request.term
      						}
      					)
      				},
      			minLength : 3,
      			focus: function( event, ui ) {
      			        $this.val( ui.item.name );
      			        return false;
      			      },
      		  	select: function( event, ui ) {	
      		  	  fs_complete($that, ui.item)
      		  	  $this.val( ui.item.name );
      		  	  return false;
      		  	},	
      		});
      	});